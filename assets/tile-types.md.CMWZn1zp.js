import{_ as a,c as t,o as s,ae as i}from"./chunks/framework.Bzj5L_M9.js";const u=JSON.parse('{"title":"Tile Types","description":"","frontmatter":{},"headers":[],"relativePath":"tile-types.md","filePath":"tile-types.md"}'),o={name:"tile-types.md"};function l(c,e,n,r,d,h){return s(),t("div",null,e[0]||(e[0]=[i('<h1 id="tile-types" tabindex="-1">Tile Types <a class="header-anchor" href="#tile-types" aria-label="Permalink to &quot;Tile Types&quot;">​</a></h1><h2 id="adjacency-strings" tabindex="-1">Adjacency strings <a class="header-anchor" href="#adjacency-strings" aria-label="Permalink to &quot;Adjacency strings&quot;">​</a></h2><ul><li><p>Each tile type&#39;s adjacency rules are determined solely by 6 strings associated with it - <code>up</code>, <code>down</code>, <code>left</code>, <code>right</code>, <code>front</code> and <code>back</code>.</p></li><li><p>Of the possible values these strings can take, the value <code>anything</code> is a reserved value for surfaces that are not in contact with any tile.</p></li><li><p>Tiles can be adjacent only if the corresponding strings&#39; values are equal (even if the value is <code>anything</code>).</p></li></ul><h2 id="color-mappings" tabindex="-1">Color mappings: <a class="header-anchor" href="#color-mappings" aria-label="Permalink to &quot;Color mappings:&quot;">​</a></h2><ul><li>For visual representation, there exists a color map associated with the possible values these strings can take.</li><li>The colors themselves have no effect on the adjacency rules.</li><li>If a particular value is mapped to a color, all tiles whose tile type&#39;s associated strings with that value, are rendered with that color.</li><li>When an unseen value is assigned, the default color associated with the value is white.</li><li>The color associated with <code>anything</code> is black.</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Whenever a new value is used, it is recommended to change the associated color to something other than white or black. This way, the presence of white serves as a warning that the string has an unexpected value.</p></div><h2 id="name" tabindex="-1">Name <a class="header-anchor" href="#name" aria-label="Permalink to &quot;Name&quot;">​</a></h2><p>The name of the tile type consists of two parts:</p><ul><li>the <code>core</code> - a string determines the color of the body, used in the color mapping</li><li><code>classes</code> - a string used to describe the tile type, for identification</li></ul><p>The <code>classes</code> string is of the form <code>class1-class2-class3</code>. The fully qualified name of the tile type is of the form <code>core-class1-class2-class3</code>.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>It is not necessary (though recommended) that tile types have unique fully qualified names.</p></div>',11)]))}const m=a(o,[["render",l]]);export{u as __pageData,m as default};
